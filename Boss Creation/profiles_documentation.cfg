// =============================	README		=============================		README		=============================
//
//		This profiles example may contain outdated, incorrect or missing info. There is a lot of stuff in SF2, an insane amount of complexity that often requires high maintenance.
// 		This is the most accurate listing of boss config settings in Slender Fortress, spanning as far back as post 0.2.8.
//
//		Original documentation was provided by Kit o' Rify and is maintained by Glubbable.
//
// =============================	README		=============================		README		=============================

// Slender Fortress - Boss Profiles
//
// Here is where all data about a boss is put, such as their behavior, sanity increase/decrease rates, turnrate, animations, appear chance, etc.
// Some fields are required to be put in the profile data, but most of them are optional. All values involving time are in seconds unless stated otherwise.
// Not all fields are required to be written in a boss's profile. Optional fields will have a default value.
//
// Any sections ( {} ) abbrieviated with "sound_" will have its contents automatically precached and put in the server downloads table. Some of them also have several keyvalues that
// allows you to change how the sound is played in the game, including channel, pitch, volume, cooldown_min, and cooldown_max. Of course, they're all optional, but this 
// mostly only applies to boss type 2 sounds and proxy sounds.
// For example:

// 	"sound_chasingenemy"
//	{
//		"1"	"cof/slowerno/idle1.wav"
//		"2"	"cof/slowerno/idle2.wav"
//	}
//
//	"sound_chasingenemy_cooldown_min"	"1.5"
//	"sound_chasingenemy_cooldown_max"	"2.1"
//	"sound_chasingenemy_volume"	"0.7"

// Any other mentions of the word "section" involves sections of lines enclosed with braces ( {} ), like the example.

// Sections list their content one by one, each assigned by a number that increases as more content is inserted like the example. The content numbers HAVE to be in sequence,
// or else the gamemode might read a non-existent value and/or not be able to read that value at all. Some sections only support 1 content, which means no matter how much
// content you put into it only the first one will be read and used. They're noted in this guide.

// If you are familiar with VS. Saxton Hale/Freak Fortress 2, the mod_precache, mod_download, mat_download, and download sections works the same way. If you're not, there's more information
// about it below.
// Put the full path of a model or a material in mod_download or mat_download WITHOUT its extension, and all their associated extensions will be automatically be put into the downloads table.
// Any section that is prefixed with sound_ will automatically be precached and queued for downloading, so there's no need to put the sounds in a download section.

// =============================================
// 		BASE KEYVALUES			
// =============================================
// These values are mandatory, however certain values depends on the type of the boss.

// "name" - An easy-to-read name of the boss. Can be utilized for menus, etc.
// "type" - 0 = teleporting boss; 1 = teleporting boss, but only moves if not being looked at; 2 = chasing boss, will first be put at an alert state, then chases.
// "model" - Model path of the boss's main model.
// "model_averagedist" - The boss will change its model to this if it approaches from an average distance from a player. Only for boss type 1.
// "model_closedist" - The boss will change its model to this if it approaches from an average distance from a player. Only for boss type 1.
// "model_scale" - How big the boss's model should be (will not affect hitboxes).
// "eye_pos" - Where (relative to the boss's origin) the eyes of the boss is located. This is for visibility/space checks.
// "hull_mins" / "mins" - A vector that indicates the lowest corner of the boss's collision box. This is for visibility/space checks. In most cases, all values should either be negative or 0, and the third value should be 0.
// "hull_maxs" / "maxs" - A vector that indicates the maximum large the game should consider the boss to be. This is for visibility/space checks. In most cases, all values should either be positive or 0, and the third value should be positive.
// "turnrate" - Indicates the base turning speed of the boss in degrees per second.
// "kill_radius" - If a player gets this close to the boss, he will suicide.
// "copy" - Boolean (0/1) that determines if the boss should make copies of itself to chase separated players. Default value is "0".
// "copy_max" - Determines how many copies can be active in one time.
// "skin" - Sets the skin that should be used on the boss. Defaults to "0".
// "skin_max" - Sets the max amount of possible skins on the boss. A random skin will be picked that ranges from the values set in "skin" & "skin_max". Defaults to "0".
// "stepsize" - Defines the size of each step a boss takes. Default is "18". Do not change unless you really need to do so.

// SECTIONS:
// "mod_download" - Models that are to be downloaded should be put here. Insert the full model path (starting with "models/"), but leave out the .mdl extension. The mdl, phy, dx80.vtx, dx90.vtx, sw.vtx, and the vvd extensions of the model will automatically be queued for downloading.
// "mod_precache" - Models that are associated with this boss should be inserted here. Insert the full model path (starting with "models/"). YOU MUST DO THIS OR THE BOSS WILL CRASH UPON SPAWNING!
// "mat_download" - Materials that are to be downloaded should be put here. Insert the full material path (starting with "materials/"), but leave out the .vmt or .vtf extension. The vmt and the vtf extensions will automatically be queued for downloading.
// "download" - Put everything else needed for downloading here that doesn't fit within "mod_download" or "mat_download". List out all contents with their extensions. This is useful if "mod_download" or "mat_download" queues files that do not exist, but you would have to enter each file one by one.
// "sound_move" - Looping sound that is played when the boss moves. This is only for boss type 1. Only the first sound listed will be used.
// "sound_player_deathcam" - Sound(s) played to the player when the death-cam sequence starts.
// "sound_player_deathcam_all" - Sound(s) played to everyone when the death-cam sequence starts for a player from this boss.
// "sound_player_death" - DEPRECATED, use "sound_player_deathcam" instead!
// "sound_player_death_all" - DEPRECATED, use "sound_player_deathcam_all" instead!
// "sound_attack_killed" - Sound(s) played locally when the boss kills a player.
// "sound_attack_killed_all" - Sound(s) played to everyone when the boss kills a player.
// "sound_scare_player" - Sound(s) played to the player when he gets a scare.
// "sound_music" - Override the sound pages.
// "sound_static" - Looping sound that is played to the player when the boss starts draining his Sanity. Only the first sound listed will be used.
// "sound_20dollars" - Looping sound that is played alongside "sound_static" when $20 is enabled. Only the first sound listed will be used.
// "sound_jumpscare" - Sound that is played to the player when the boss uses the Jumpscare feature against him. Only the first sound listed will be used.
// "sound_music_loop" - If a music set in the section "sound_music" is a .mp3 file you can use this key for loop it.
// "overlay_player_death" - Screen overlay that is displayed to the player during the death-cam sequence. Don't forget to add the material to the mat_download/download section! Only the first material listed will be used.
// "overlay_jumpscare" - Screen overlay that is displayed to the player when the boss uses the Jumpscare feature against him. Don't forget to add the material to the mat_download/download section! Only the first material listed will be used.

// =====================================================
// 		BOSS SELECTION KEYVALUES		
// =====================================================
// "enable_random_selection" - Boolean (0/1) that determines if the boss can be selected at random at start of a new boss round. Default value is "1".
// "enable_random_selection_survival" - Boolean (0/1) that determins if the boss can be selected randomly for Survival maps only. Default value is "0".
// "enable_random_selection_raid" - Boolean (0/1) that determins if the boss can be selected randomly for RAID maps only. Default value is "0".
// "enable_random_selection_proxies" - Boolean (0/1) that determins if the boss can be selected randomly for Proxy Survival maps only. Default value is "0".

// =============================================
// 		ANGER KEYVALUES			
// =============================================
// Anger is a value that indicates how "frustrated" the boss is. It is calculated by how fast players collect pages and the difficulty.

// "anger_start" - The starting value of the boss's anger. Should be well around 1.0
// "anger_page_time_diff" - If players collect pages below this value (in seconds), anger will increase.
// "anger_page_add" - How much anger to add when players collect pages below the value defined in "anger_page_time_diff".

// =============================================
// 		SANITY KEYVALUES		
// =============================================
// Each player begins with 100 Sanity points. If a player's Sanity drops to 0, he will suicide. The rate which Sanity increases/decreases depends on the boss
// encountered. Only one boss at a time can control a player's Sanity rate. The controlling boss is determined on the anger level of the boss. The higher the
// anger, the more priority it has over other bosses. Multiple bosses cannot stack their rates against a player.

// "static_on_look" - Boolean (0/1) which indicates whether or not looking at the boss will cause the player's Sanity to lower.
// "static_on_radius" - Boolean (0/1) which indicates whether or not being near the boss will cause the player's Sanity to lower.
// "static_rate" - The base rate which sanity will lower for players encountering this boss in terms of 5 Sanity points per x seconds.
// "static_rate_decay" - The base rate which sanity will regenerate for players encountering this boss in terms of 5 Sanity points per x seconds.
// "static_radius" - If "static_on_radius" is set to 1, then a player will start to lose Sanity when he's this close to the boss and the boss can see him.
// NOTE: Static Radius can be affected by difficulty via _hard, _insane & _nightmare prefixes. Example: "static_radius_hard".

// =============================================
// 		SCARE KEYVALUES			
// =============================================
// In Slender Fortress, a "scare" occurs when the player sees the boss after a certain amount of time has passed since the time he last saw it. This results
// in a temporary speed boost. The likelihood of a player getting scared depends on the boss.

// "scare_radius" - The maximum distance that the player can be from the boss in order to get a "scare".
// "scare_cooldown" - How long after the last scare that the player will be able to be scared again.

// =============================================================
// 		TELEPORTATION BEHAVIOR KEYVALUES		
// =============================================================

// "teleport_type" - Determines teleportation behavior. Only values 0 and 2 are accepted. 0 = teleport only when no player is looking at the boss. 2 = teleport only when no player is looking at the boss AND is behind an obstruction, blocking all possible view
// "teleport_range_min" - Determines how close the boss can teleport to a player (or any player for that matter), in relation to the NavMesh.
// "teleport_range_max" - The maximum distance the boss can teleport away from a player, in relation to the NavMesh.
// "teleport_target_rest_period" - Determines how long a boss should leave its previous teleportation target alone. Default is "15.0"
// "teleport_target_persistency_period" - Determines how long a boss can consistently teleport onto its current teleportation target. Default is "9.0"
// "teleport_target_stress_min" - Determines minimum stress level of current teleportation target required before boss forcibly backs off and puts him in a rest period. Default is "0.2"
// "teleport_target_stress_max"	- Determines maximum stress level of current teleportation target required before boss - yeah, you know. Default is "0.9"
// NOTE: "teleport_target_stress_min" value will steadily increase as the boss's anger increases, in relation to "teleport_target_stress_max"
// "teleport_dist_between_copies" - Determins the distance between copies when teleporting to a target, useful for bosses you want to spawn in groups for a single target or if you want them spread out to focus multiple players at once.
// NOTE: Teleport Range Min & Max can be affected by difficulty via _hard, _insane & _nightmare prefixes.

// "teleport_time_min" - Minimum amount of seconds between teleports.
// "teleport_time_max" - Maximum amount of seconds between teleports.
//
// Determines how often the boss will check to see if it can teleport/spawn to another place. Thinking time intervals are determined by a random value chosen between 
// "teleport_time_min" and "teleport_time_min".

// ==============================================
// 		DEATH CAM KEYVALUES		
// ==============================================
// The death-cam is a feature that when a player is caught via "kill_radius", his view will be forced to shift over to the boss's position via "death_cam_pos", 
// relative to the boss's true position. After a certain amount of time he will die, but during the sequence he is invincible until the sequence finishes.

// "death_cam" - Boolean (0/1) that determines whether or not the boss should have the death-cam feature enabled.
// "death_cam_pos" - Vector that determines the position relative to the boss's position that the camera should look at.
// "death_cam_overlay" - Boolean (0/1) that determines whether or not the death-cam sequence should force a screen overlay determined in the category "overlay_player_death", which will override the player's screen.
// "death_cam_time_overlay_start" - If "death_cam_overlay" is set to 1, determines how long before after a certain amount of time should the screen overlay actually appear.
// "death_cam_time_death" - Amount of time that will have to pass in the death-cam sequence before the player is forced to suicide.

// =============================================================
// 		PLAYER BLINK BEHAVIOR KEYVALUES			
// =============================================================

// "blink_look_rate_multiply" - Float value that is directly multiplied to the blink rate of a player looking at the boss. Default is "1.0".
// "blink_static_rate_multiply" - Float value that is directly multiplied to the blink rate of a player that is either near the boss or simply looking at the boss. Default is "1.0".

// =============================================
// 		"JUMPSCARE" KEYVALUES		
// =============================================
// Probably the worst name I've given to this feature, but it's basically a screen overlay + sound that will play on a player's screen if the boss teleports in front of 
// the player or near the player.

// "jumpscare" - Boolean (0/1) that determines whether or not the boss should use the jumpscare feature.
// "jumpscare_no_sight" - Boolean (0/1) that determins whether or not to ignore the check when the boss gets teleported into possible sight of the player(s). Defaults to "0".
// "jumpscare_distance" - Determines the minimum distance the boss has to be to a player when it teleports to the player in order for the jumpscare feature to be used.
// "jumpscare_duration" - Determines how long the screen overlay of the jumpscare feature will last on a player's screen.
// "jumpscare_cooldown" - Determines how long before the boss could use the jumpscare feature again. This is ignored when the boss teleports in a player's sight.
// NOTE: Jumpscare Distance, Duration and Cooldown can be affected by difficulty via _hard, _insane & _nightmare prefixes.

// =============================================
// 		PROXY KEYVALUES			
// =============================================
// A proxy is a minion of Slender Man that unquestionably does his bidding. Could also include the inability to speak coherent sentences.
// In Slender Fortress, a proxy is a randomly-chosen player on BLU team that will spawn within the RED play area. Their main objective is to kill the RED. Their damage scale can be adjusted 
// and backstab damage has been adjusted to deal only 10% of the target's max health instead of the usual 200%.
// Also to note, proxies spawn in waves and in time-intervals, with the time between waves defined by a randomly-chosen value between "proxies_spawn_cooldown_min" and "proxies_spawn_cooldown_max".
// Proxies also start out with 100 Control points, which will drain as the proxy lives. If the proxy has no more Control points, it will automatically suicide.

// "proxies" - Boolean (0/1) that determines whether or not the boss should use the Proxy feature.
// "proxies_teleport_enabled" - Boolean (0/1) - Determins if Proxies for the boss should spawn in normally or not.
// "proxies_classes" - List of classes that are allowed for the proxy. Separate each class name with a space. Available class names are: scout, soldier, sniper, demoman, heavyweapons, medic, pyro, spy, engineer.
// "proxies_max" - Determines the maximum amount of proxies the boss can have playing at once.
// "proxies_spawn_chance_min" - Similarly functions to "appear_chance_min".
// "proxies_spawn_chance_max" - Similarly functions to "appear_chance_max".
// "proxies_spawn_chance_threshold" - Similarly functions to "appear_chance_threshold".
// "proxies_spawn_cooldown_min" - Determines the minimum cooldown time of spawning proxies.
// "proxies_spawn_cooldown_max" - Determines the maximum cooldown time of spawning proxies.
// "proxies_spawn_num_min" - Determines the minimum amount of proxies the boss can spawn in a wave.
// "proxies_spawn_num_max" - Determines the maximum amount of proxies the boss can spawn in a wave.
// "proxies_controldrainrate" - Determines how long 1 Control Point out of 100 will last (in seconds).
// "proxies_controlgain_hitenemy" - Determines how many Control points the proxy will receive after hitting an enemy.
// "proxies_controlgain_hitbyenemy" - Determines how many Control points the proxy will receive after getting hit by a player.
// "proxies_damage_scale_vs_enemy" - Damage scale that is applied to damage that the proxy deals against enemies. Default is "1.0".
// "proxies_damage_scale_vs_self" - Damage scale that is applied to damage that the proxy recieves from enemies. Default is "1.0".
// "proxies_allownormalvoices" - Boolean (0/1) that determines whether or not proxies are allowed to use their normal voices (including the voice menu). Default is "1".
// "proxies_zombie"	- Boolean (0/1) that determines whether or not proxies will use Zombie Soul model. Default is "0".
//
// "proxies_death_anim_all" - Death animation that is used for the boss's proxies. Used if the proxy's class doesn't have its own "proxy_death_anim_<class>" section or gets a blank death anim from its section.
// "proxies_death_anim_scout" - Death animation that is used for the boss's proxies if the proxy's class is a Scout.
// "proxies_death_anim_soldier" - Death animation that is used for the boss's proxies if the proxy's class is a Soldier.
// "proxies_death_anim_sniper" - Death animation that is used for the boss's proxies if the proxy's class is a Sniper.
// "proxies_death_anim_demoman" - Death animation that is used for the boss's proxies if the proxy's class is a Demoman.
// "proxies_death_anim_heavyweapons" - Death animation that is used for the boss's proxies if the proxy's class is a Heavy.
// "proxies_death_anim_medic" - Death animation that is used for the boss's proxies if the proxy's class is a Medic.
// "proxies_death_anim_pyro" - Death animation that is used for the boss's proxies if the proxy's class is a Pyro.
// "proxies_death_anim_spy" - Death animation that is used for the boss's proxies if the proxy's class is a Spy.
// "proxies_death_anim_engineer" - Death animation that is used for the boss's proxies if the proxy's class is a Engineer.
//
// "proxies_death_anim_frames_all" - How many frames from the animation must be played, before drop the ragdoll. Used if the proxy's class doesn't have its own "proxy_death_anim_frames_<class>" section or gets a blank death anim frames from its section.
// "proxies_death_anim_frames_scout" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Scout.
// "proxies_death_anim_frames_soldier" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Soldier.
// "proxies_death_anim_frames_sniper" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Sniper.
// "proxies_death_anim_frames_demoman" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Demoman.
// "proxies_death_anim_frames_heavyweapons" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Heavy.
// "proxies_death_anim_frames_medic" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Medic.
// "proxies_death_anim_frames_pyro" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Pyro.
// "proxies_death_anim_frames_spy" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Spy.
// "proxies_death_anim_frames_engineer" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Engineer.

// SECTIONS:
// "sound_proxy_spawn" - Sound(s) that the proxy will make when it spawns into the map. Supports custom channel, pitch, level, volume, and flags.
// "sound_proxy_summoned" - Sound(s) that are played to the proxy when they begin to spawn. Supports custom channel, pitch, level, volume, and flags.
// "sound_proxy_idle" - Sound(s) that the proxy will make while it's alive. Supports custom cooldown_min, cooldown_max, channel, pitch, level, volume, and flags.
// "sound_proxy_hurt" - Sound(s) that the proxy will make when an enemy hurts it. Supports custom cooldown_min, cooldown_max, channel, pitch, level, volume, and flags.
// "sound_proxy_death" - Sound(s) that the proxy will make when an enemy kills it. Supports custom channel, pitch, level, volume, and flags.
// "mod_proxy_all" - Model(s) that are used for the boss's proxies. Used if the proxy's class doesn't have its own "mod_proxy_<class>" section or gets a blank model from its section.
// "mod_proxy_scout" - Model(s) that are used for the boss's proxies if the proxy's class is a Scout.
// "mod_proxy_soldier" - Model(s) that are used for the boss's proxies if the proxy's class is a Soldier.
// "mod_proxy_sniper" - Model(s) that are used for the boss's proxies if the proxy's class is a Sniper.
// "mod_proxy_demoman" - Model(s) that are used for the boss's proxies if the proxy's class is a Demoman.
// "mod_proxy_heavyweapons" - Model(s) that are used for the boss's proxies if the proxy's class is a Heavy.
// "mod_proxy_medic" - Model(s) that are used for the boss's proxies if the proxy's class is a Medic.
// "mod_proxy_pyro" - Model(s) that are used for the boss's proxies if the proxy's class is a Pyro.
// "mod_proxy_spy" - Model(s) that are used for the boss's proxies if the proxy's class is a Spy.
// "mod_proxy_engineer" - Model(s) that are used for the boss's proxies if the proxy's class is an Engineer.

// =============================================
// 		CHASER TYPE KEYVALUES		
// =============================================
// These keyvalues can only be used by bosses whose types are 2.

// "fov" - The boss's field of view in degrees.

// "wake_radius" - If a player gets this close to the boss the boss will immediately be notified of that player's position.

// "walkspeed" - The base speed of the boss's walking speed. Affected by the difficulty modifier and anger.
// "walkspeed_max" - The maximum speed of the boss's walking speed that can be calculated. Affected by the difficulty modifier.

// "jump_speed" - How much velocity is applied upwards in a jump. Adds bosses walk speed as a speed boost.

// "wander_move" - Boolean (0/1) that determines if the boss should wander around while in idle state. Default is "1".

// "idle_lifetime" - The amount of time the boss will spend around in idle after teleporting in, once this time is up, they'll disappear.
// "idle_lifetime_easy" Same as "idle_lifetime", except in Easy difficulty. If not set it will use the value in "idle_lifetime" instead.
// "idle_lifetime_hard" Same as "idle_lifetime", except in Hard difficulty. If not set it will use the value in "idle_lifetime" instead.
// "idle_lifetime_insane" Same as "idle_lifetime", except in Insane difficulty. If not set it will use the value in "idle_lifetime" instead.
// "idle_lifetime_nightmare" Same as "idle_lifetime", except in Nightmare difficulty. If not set it will use the value in "idle_lifetime" instead.

// "search_range" - How far the boss can see when searching for enemies.

// "search_alert_gracetime" - The amount of time that the player can be in the boss's vision before the boss is allowed to go into a chasing state.
// "search_alert_gracetime_easy" - Same as "search_alert_gracetime", except in Easy difficulty. If not set it will use the value in "search_alert_gracetime" instead.
// "search_alert_gracetime_hard" - Same as "search_alert_gracetime", except in Hard difficulty. If not set it will use the value in "search_alert_gracetime" instead.
// "search_alert_gracetime_insane" - Same as "search_alert_gracetime", except in Insane difficulty. If not set it will use the value in "search_alert_gracetime" instead.
// "search_alert_gracetime_nightmare" - Same as "search_alert_gracetime", except in Insane difficulty. If not set it will use the value in "search_alert_gracetime" instead.

// "search_chase_duration" - How long the boss should chase the player. The time resets if the boss sees a player again.
// "search_chase_duration_easy" - Same as "search_chase_duration", except in Easy difficulty. If not set it will use the value in "search_chase_duration" instead.
// "search_chase_duration_hard" - Same as "search_chase_duration", except in Hard difficulty. If not set it will use the value in "search_chase_duration" instead.
// "search_chase_duration_insane" - Same as "search_chase_duration", except in Insane difficulty. If not set it will use the value in "search_chase_duration" instead.
// "search_chase_duration_nightmare" - Same as "search_chase_duration", except in Insane difficulty. If not set it will use the value in "search_chase_duration" instead.

// NOTE: Persistency is defined as the time period that gives the boss's ability to create new paths to its target every think; in other words, be constantly aware of its position
// "search_chase_persistency_time_init" - initial persistency duration when put into chase mode.
// "search_chase_persistency_time_add_newtarget" - How much time is added to persistency once a new target is given.
// "search_chase_persistency_time_add_visible_min" - How much time is added per 0.1 seconds when the boss sees the player.
// "search_chase_persistency_time_add_visible_max" - How much time is added per 0.1 seconds when the boss sees the player.
// NOTE: Value obtained from "search_chase_persistency_time_add_visible_min" and "search_chase_persistency_time_add_visible_max" varies in a inversely proportional relationship with distance to its target
// "search_chase_persistency_time_add_attack" - How much time as added when the boss attacks

// "attack_delay" - After the boss's attack started, damage will be applied to players within range after this amount of time.
// "attack_range" - Range of the boss's attack.
// "attack_damage" - How much damage to deal in an attack.
// "attack_damagetype" - The type of damage that the boss deals against players. This is a bitflag value.
// "attack_punchvel" - Vector that determines the amount of "view punch" dealt to players when hit by this boss's attack.
// "attack_endafter" - How long the boss's attack lasts throughout the whole thing.
// "attack_spread" - replaces "attack_fov", determines how wide (in degrees) the boss can deal damage to entities

// "stun_enabled" - Boolean (0/1) that determines if the boss should be able to be stunned or not.
// "stun_health" - How much damage players have to deal against the boss before it is stunned.
// "stun_duration" - Duration of the stun.
// "stun_damage_flashlight" - How much damage dealt per think (0.01 seconds) if the boss is exposed to a player's flashlight (damage does not stack with multiple players)

// SECTIONS:
// "sound_chase" - Looping sound that will play when the boss is chasing a player, usually a song. Only the first sound listed will be used.
// "sound_chase_visible" - Looping sound that will play alongside "sound_chase" when the boss can see the player. Only the first sound listed will be used.
// "sound_chasingenemy" - Sound(s) that the boss will make while chasing an enemy.
// "sound_chaseenemyinitial" - Sound(s) that the boss will make when it begins chasing an enemy.
// "sound_idle" - Sound(s) that the boss will make while in an idle or a wandering state.
// "sound_alertofenemy" - Sound(s) that the boss will make while in an alert state.
// "sound_hitenemy" - Sound effect(s) that is played when the boss successfully hits an enemy with its melee attack.
// "sound_missenemy" - Sound effect(s) that is played when the boss ends up hitting nothing with its melee attack.
// "sound_stun" - Sound(s) that the boss will make when it gets stunned.

// =============================================
// 		ANIMATION KEYVALUES		
// =============================================
// Determines the animations that are played on certain states of the boss.

// "animation_idle" - A name of an animation that will play when the boss is at an idle state. For boss types 0 and 1, this will be their default animation.
// "animation_idle_playbackrate" - How fast the idle animation should play. Default is "1.0".
// "animation_walk" - A name of an animation that will play when the boss is walking. Only for boss type 2.
// "animation_walk_playbackrate" - How fast the walk animation should play. Default is "1.0".
// "animation_run" - A name of an animation that will play when the boss is running. Only for boss type 2.
// "animation_run_playbackrate" - How fast the run animation should play. Default is "1.0".
// "animation_stun" - A name of an animation that will play when the boss is at a stunned state. Only for boss type 2.
// "animation_stun_playbackrate" - How fast the stun animation should play. Default is "1.0".

// =============================================
// 		ADVANCED ANIMATIONS		
// =============================================
// Advanced Animations is more complex in nature compared to the traditional method of animations.
// Instead of using only one type of animation for their state, bosses are able to use up to 8 different configured animations of their choosing.
// Ontop of this, they are also able to use different animations in these blocks based on the difficulty.

// For this instance, for non-difficulty based advanced animations, we will borrow the Rakes profile.

//		"animations" // This is the main block of anims, this can be anywhere in the profiles main block. (Preferably we have this second from last).
//		{
//			"idle" // This is the block within the animations section that states the idle animations that could be available.
//			{
//				"1" // This is the number available for the boss to pick from, by standard, you must always have 1 for idle, walk & run.
//				{
//					"animation_idle"	"idle" // This is the name of the animation we are looking for when the boss selections this section.
//					"animation_idle_playbackrate"	"1.0" // This is the playrate of the animation linked to the idle animation.
//				}
//
//				"2" // Since we have 2 idle anims to pick from, the boss will cycle through these at random after each state change.
//				{
//					"animation_idle"	"idle_angry"
//					"animation_idle_playbackrate"	"1.0"
//				}
//			}
//
//			"walk"
//			{
//				"1"
//				{
//					"animation_walk"	"walk_all"
//					"animation_walk_playbackrate"	"1.5"
//				}
//			}
//
//			"run"
//			{
//				"1"
//				{
//					"animation_run"		"Run"
//					"animation_run_playbackrate"	"1.5"
//				}
//			}
//
//			"stun" // This section contains our stun animations, which is an optional thing to include but is required if the boss is stunnable.
//			{
//				"1" // NOTE: If you are using more than 1 stun animation, make sure they are all in sync with the duration of the stun.
//				{
//					"animation_stun"	"BR2_Roar"
//					"animation_stun_playbackrate"	"0.75" 
//				}
//			}
//
//			"attack" // This is the section that contains our attack animations, however, unlike before, these are tied exclusively to one attack each.
//			{
//				"1" // This does however, unlike the stun animations, doesn't not require them to be synced to just one timer, instead, they are syncing to the attack times of each attack number you provide.
//				{
//					"animation_attack"	"Melee"
//					"animation_attack_playbackrate"	"1.5"
//				}
//
//				"2"
//				{
//					"animation_attack"	"BR2_Attack"
//					"animation_attack_playbackrate"	"2.15"
//				}
//			}
//
//			"deathcam" // This section can be used to set an animation for bosses that deathcam a player.
//			{
//				"1"
//				{
//					"animation_deathcam"			"idle"
//					"animation_deathcam_playbackrate"	"1.0"
//				}
//			}
//		}

// Currently none of the public bosses have been updated with the difficulty based animations. However, it is pretty straight forward to add.
//
// Add into the same number as your desired animation with the _hard, _insane & _nightmare prefixes for animations such as "animation_walk".
// Add into the same number as your desired animation with the _hard_, _insane_ & _nightmare_ prefixes for playrates such as "animation_walk_playbackrate".
//
// NOTE: You will need to set "difficulty_affects_animations" to "1" in your boss profile in order to use difficulty based animations.
// NOTE2: This only applies for idle, walk & run animation sets, for everything else, it is completely ignored and no longer needed for all the other animations.
//
//				"1" // Example
//				{
//					"animation_walk"			"walk"
//					"animation_walk_playbackrate"		"1.0"
//
//					"animation_walk_hard"			"walk"
//					"animation_walk_hard_playbackrate"	"1.25"
//
//					"animation_walk_insane"			"walk"
//					"animation_walk_insane_playbackrate"	"1.5"
//
//					"animation_walk_nightmare"		"walk"
//					"animation_walk_nightmare_playbackrate"	"2.0"
//				}

// =============================================================
// 		ADVANCED ANIMATIONS - ATTACK DATA		
// =============================================================
//
// This system can only be used if you have your advanced animations set up.
// Keep in mind that there is no backwards compatability between the advanced animation system and the straight forward singular animation.
// However, this system uses the same keyvalues so bringing them over to advanced animations isn't difficult.
//
//		"attacks" // This is the block where we keep our attack data. (Prefer to keep this at the bottom of the profile)
//		{
//			"1" // This is the number for the attack, it must match the one provided in the attack section under attack animations.
//			{
//				"attack_delay"	"0.0"
//				"attack_range"	"100.0"
//				"attack_begin_range"	"75" // Closer Attacks have priority.
//				"attack_damage"	"5.0"
//				"attack_damagetype"	"1048576"
//				"attack_punchvel"	"60 60 1"
//				"attack_endafter" "0.1"
//				"attack_spread"	"45"
//				"attack_cooldown"	"1.0" // Unless they are on cooldown.
//				"attack_repeat"		"0"
//			}
//
//			"2"
//			{
//				"attack_delay"	"0.10"
//				"attack_range"	"200.0"
//				"attack_begin_range"	"100"
//				"attack_damage"	"10.0"
//				"attack_damagetype"	"1048576"
//				"attack_punchvel"	"60 60 1"
//				"attack_endafter" "0.50"
//				"attack_spread"	"90"
//				"attack_cooldown"	"2.0"
//				"attack_repeat"		"0"
//			}	
//		}
//
//	--- REPEATING ATTACKS ---
//
// Repeating attacks use the advanced animation system to achieve this. It is very similar to the setup above, but the keyvalues have different affects on the input.
//
//		"attacks"
//		{
//			"1"
//			{
//				"attack_delay"	"0.6" // How long in seconds, should the attack be repeated.
//				"attack_range"	"240.0"
//				"attack_begin_range"	"100"
//				"attack_damage"	"8.0"
//				"attack_damagetype"	"1114112"
//				"attack_punchvel"	"12 15 5"
//				"attack_endafter" "3.0" // How long should the attack last for until we stop repeating. Always end with enough time before the next repeat can occur.
//				"attack_spread"	"360"
//				"attack_repeat"	"1" // Enables repeating attack behavior for this attack index only, otherwise, it will be normal.
//			}
//		}

// =====================================================
// 		CHAT MESSAGE UPON DEATH			
// =====================================================
//
// This is a basic, print to chat function that prints the Clients Name followed by a message from the bosses profile.
// It is fairly straight forward, yet could add some degree of personality or charm to the boss in question.
//
// This is how it looks in the profiles, this is a sample taken from Slender's profile.
// These messages will always print if the boss is considered as the inflictor upon the clients death.
//
// An example of how this would appear in would would be "[SF2] Player got killed by Slender."
//
// 		"chat_message_upon_death"
//		{
//			"1"	"was caught by Slender."
//			"2"	"angered Slender by taking his pages."
//			"3"	"decided it was a good idea to take on Slender."
//			"4"	"didn't know what they got themselves into."
//		}
//
//
// There is also "chat_message_upon_death_prefix" which allows you to change the prefix of the message.
// By default this uses "[SF2]", but can be changed to another prefix, such as "[SCP]".
//
// However, if this is missing from the profile. It will not attempt to print any messages.
// Ontop of that, if the boss is allowed to attack blue, it will also stop printing these messages to avoid spam.


// =====================================================
// 			BOSS ATTRIBUTES				
// =====================================================
//
// Boss Attributes are specific settings on a boss that change certain aspects about the boss.
// These can range from stat changes to the bosses to impacts to the bosses victims.

// An example of attributes in the boss profile look like this.
//
//		"attributes"
//		{
//			"always look at target" // Name of the attribute.
//			{
//				"value"	"1" // Value to set on the attribute. Always seen as float values.
//			}
//
//			"reduced speed on look"
//			{
//				"value"	"0.6"
//			}
//
//			"reduced walk speed on look"
//			{
//				"value"	"0.4"
//			}
//		}
//
// Here is a list of all the current attributes in the gamemode.
// NOTE: An Attribute Value must be set to 0.0 or higher for it to work for the boss.
// NOTE2: Availability of attributes depends on the version of the gamemode.
//
// Attribute - "reduced speed on look" - Percentage - Determins how much the bosses speed should be slowed down by. Values higher than 1.0 speed up the boss instead.
// Attribute - "reduced walk speed on look" - Percentage - Determins how much the bosses walk speed should be slowed down by. Values higher than 1.0 speed up the boss instead.
// Attribute - "add stun health on stun" - Value - Determins how much stun health to add when the boss gets stunned.
// Attribute - "add death health on death" - Value - Determins how much death health to add when the boss gets killed.
// Attribute - "always look at target" - State - Determins if the boss should always look at their target.
// Attribute - "always look at target while chasing" - State - Determins if the boss should always look at their target, but only while it is chasing.
// Attribute - "always look at target while attacking" - State - Determins if the boss should always look at their target, but only while it is attacking.
// Attribute - "bleed player on hit", - State - Determins if bleed damage should be applied to those the boss successfully hits.
// Attribute - "ignite player on hit" - State - Determins if successfully hit targets should be ignited.
// Attribute - "ignite player on scare" - State - Determins if players should be ignited upon being scared by the boss.
// Attribute - "mark player for death on scare" - State - Determins if players should be marked for death upon being scared by the boss.
// Attribute - "silent mark player for death on scare" - State - Determins if players should be silently marked for death upon being scared by the boss.
// Attribute - "force player taunt on scare" - State - Determins if the player should be forced to taunt when scared by the boss.
// Attribute - "ignite player on death" - State - Determins if the bosses victim should be ignited upon death.
// Attribute - "add speed on stun" - Value - Determins how much speed to add to the boss upon being stunned.
// Attribute - "add max speed on stun" - Value - Determins how much max speed to add to the boss upon being stunned.
// Attribute - "death cam on low health" - State - Determins if the victim should be death cammed when they're going to die to a hit.
// Attribute - "alert copies" - State - Determins if active, non-busy copies of the boss should begin chasing the same target.
// Attribute - "alert companions" - State - Determins if active, non-busy companions should begin chasing the same target.
// Attribute - "block walk speed under difficulty" - Value - Determins if the boss should be blocked from walking on lower difficulities.
// Attribute - "chase target on scare" - Value - Determins if the boss should chase a target upon scaring them.
// Attribute - "ignore non-marked for chase" - Value - Determins if the boss should ignore players that are not set for auto-chase.

// =====================================================
// 		COMPANION SPAWNING SYSTEM			
// =====================================================
//
// Companion Spawning allows for Bosses to spawn in additional bosses with them upon selection.
// This basically allows for dual or grouped bosses to be deployed for the round.
//
// An example of this will be provided from Slender's profile.
//
//		"companions"
//		{
//			"1"	"kate" // Name of the bosses root profile key.
//		}
//
// Bosses listed here will be spawned alongside this boss whenever it is chosen. 
// NOTE: Companions cannot spawn in the boss that spawns them.
// NOTE2: Bosses cannot spawn in companion copies of themselves.
//
// This can be placed anywhere in the profile, but we prefer to place it first before all the other file listings.

// ========================================================================================
// The following after this are subject to availability.
// Some of these values covered maybe private or currently not available yet on the GitHub.
// ========================================================================================

// =====================================================
// 		DEATH CAM EXPANDED KEYVALUES			
// =====================================================

// "deathcam_model_scale" - Float - Determins the size of the boss model that spawns during the deathcam. (Defaults to 1.0).

// "death_cam_acceleration" - Float - Determins the acceleration on the Deathcams Rotation. (Defaults to 1000.0).
// "death_cam_deceleration" - Float - Determins the deceleration on the Deathcams Rotation. (Defaults to 1000.0).
// "death_cam_speed" - Float - Determins the speed of the Deathcams Rotation. (Defaults to 1000.0).

// "death_cam_attachtment_point" - String (256) - Sets if the Deathcam should be attached to a bone on the deathcam model. (Defaults to empty string).
// "deathcam_death_backward_offset" - Float - Determins how far back the player should be moved from the Deathcams Position. (Defaults to 0.0).
// "deathcam_death_downward_offset" - Float - Determins how far down the player should be moved from the Deathcams Position. (Defaults to 0.0).

// "deathcam_death_anim_all" - String (256) - Sets the animation for all classes to perform while being deathcammed. Replace all with classname for class specific animations. (Defaults to empty string).
// "deathcam_death_anim_time_all" - Float - Determins when to repeat the animation for the deathcammed client. Replace all with classname for class specific timings. (Defaults to empty string).

// "animation_deathcam" - String (256) - Determins the animation that plays on the deathcam model.
// "animation_deathcam_playbackrate" - Float - Determins the playback rate of the animation the deathcam model is performing.
// NOTE: These animations are also supported under advanced animations.

// =============================================================
// 		CHASE UPON LOOK - Private Expansion		
// =============================================================

// Clients that look upon the Bosses face will be perma marked for endless chasing upon doing so.
// Clients will be Marked for Death when this occurs. If the boss is not busy, they will be chased by the Boss.
// Even if the Boss somehow despawns, it can currently remember those that saw it's face and will return for them in due time.

// "chase_upon_look" - Boolean (0/1) - Determins if the boss should give priority focus to those that have seen it's face.

// =============================================================
// 		TELEPORT EFFECTS - Private Expansion		
// =============================================================

// Upon Boss Spawn or Despawn, if set by the first two provided bools. Will allow the boss to play a sound at their position along with a particle, if set.
// This allows the support of any particle, as long as the correct particle name is provided and the game can successfully precache it.

// "tp_effect_spawn" - Boolean (0/1) - Determins if the boss should use a teleport effect upon spawning, defaults to "0".
// "tp_effect_despawn" - Boolean (0/1) - Determins if the boss should use a teleport effect upon despawning, defaults to "0".

// "tp_effect_spawn_particle" - String (256) - Determins the name of the particle to use upon spawning if given a valid particle name. Default is empty ("").
// "tp_effect_despawn_particle - String (256) - Determins the name of the particle to use upon despawning if given a valid particle name. Default is empty ("").

// "tp_effect_spawn_sound" - String (256) - Determins the sound to play when the boss spawns if given a valid sound. Default is empty ("").
// "tp_effect_despawn_sound" - String (256) - Determins the sound to play when the boss despawns if given a valid sound. Default is empty ("").

// "tp_effect_spawn_sound_volume" - Float - Determins the volume that the spawn sound should play at. Defaults to 1.0.
// "tp_effect_despawn_sound_volume" - Float - Determins the volume that the despawn sound should play at. Defaults to 1.0.

// "tp_effect_spawn_sound_pitch" - Int - Determins the pitch that the spawn sound should play at. Defaults to 100.
// "tp_effect_despawn_sound_pitch" - Int - Determins the pitch that the spawn sound should play at. Defaults to 100.

// "tp_effect_origin" - Vector - Determins where the particle should appear via x, y, z cords, for example "0 0 25", defaults to 0 0 0.

// =============================================================
// 		CLOAK ABILITY - Private Expansion		
// =============================================================

// Allows bosses to pop in and out of existance when chasing a target. They will pop back in whenever they are not chasing.
// Also has a cooldown setting so they are not, constantly invis, if it makes them less painful to play against.

// "cloak_enable" - Boolean (0/1) - Determins if the boss uses the cloak ability or not when chasing targets.

// "cloak_cooldown" - Float - Determins how long the cloak ability goes into cooldown for. Default is "8.0" seconds.
// "cloak_cooldown_easy" - Same as "cloak_cooldown", except in Easy difficulty. Default is "8.0" seconds multiplied by the difficulty modifier.
// "cloak_cooldown_hard" - Same as "cloak_cooldown", except in Hard difficulty. Default is "8.0" seconds divided by the difficulty modifier.
// "cloak_cooldown_insane" - Same as "cloak_cooldown", except in Insane difficulty. Default is "8.0" seconds divided by the difficulty modifier.
// "cloak_cooldown_nightmare" - Same as "cloak_cooldown", except in Nightmare difficulty. Default is "8.0" seconds divided by the difficulty modifier.

// "cloak_range" - Float - Determins the range that needs to be between the boss and the player to allow cloaking. Default is "250.0".
// "cloak_range_easy" - Same as "cloak_range", except in Easy difficulty. Default is "250.0" multiplied by the difficulty modifier.
// "cloak_range_hard" - Same as "cloak_range", except in Hard difficulty. Default is "250.0" divided by the difficulty modifier.
// "cloak_range_insane" - Same as "cloak_range", except in Insane difficulty. Default is "250.0" divided by the difficulty modifier.
// "cloak_range_nightmare" - Same as "cloak_range", except in Nightmare difficulty. Default is "250.0" divided by the difficulty modifier.

// "cloak_particle" - String (256) - Determins the particle that appears when the boss cloaks & decloaks. Defaults to "drg_cow_explosioncore_charged_blue".

// "cloak_on_sound" - String (256) - Determins the sound that plays when the boss cloaks. Defaults to "weapons/medi_shield_deploy.wav".
// "cloak_off_sound" - String (256) - Determins the sound that plays when the boss decloaks. Defaults to "weapons/medi_shield_retract.wav".

// =============================================================
// 		PROXY ENHANCEMENTS - Private Expansion		
// =============================================================

// Upon being spawned in as Proxy, if configured on the bosses profile, will provide minor but specific buffs to proxies upon spawning.
// This ranges from Speed Boosts, Crit Buffs and Spawn Protection from damage for brief periods of time or indefinetly if configured.
// NOTE: This plugin also disables random criticals when it detects that a proxy boss has spawned in.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "proxies_speed_boost" - Boolean (0/1) - Determins if the proxies spawned by the boss should get a speed buff. Defaults to "0".

// "proxies_speed_boost_time" - Determins how long a proxy should be speed boosted for after being spawned in by the boss.
// "proxies_speed_boost_time_easy" - Same as "proxies_speed_boost_time", except in Easy difficulty. If not set it will use the value in "proxies_speed_boost_time" instead.
// "proxies_speed_boost_time_hard" - Same as "proxies_speed_boost_time", except in Hard difficulty. If not set it will use the value in "proxies_speed_boost_time" instead.
// "proxies_speed_boost_time_insane" - Same as "proxies_speed_boost_time", except in Insane difficulty. If not set it will use the value in "proxies_speed_boost_time" instead.
// "proxies_speed_boost_time_nightmare" - Same as "proxies_speed_boost_time", except in Nightmare difficulty. If not set it will use the value in "proxies_speed_boost_time" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "proxies_crit_boost" - Boolean (0/1) - Determins if the proxies spawned by the boss should get a crit buff. Defaults to "0".

// "proxies_crit_boost_time" - Float - Determins how long a proxy should be crit boosted for after being spawned in by the boss.
// "proxies_crit_boost_time_easy" - Same as "proxies_crit_boost_time", except in Easy difficulty. If not set it will use the value in "proxies_crit_boost_time" instead.
// "proxies_crit_boost_time_hard" - Same as "proxies_crit_boost_time", except in Hard difficulty. If not set it will use the value in "proxies_crit_boost_time" instead.
// "proxies_crit_boost_time_insane" - Same as "proxies_crit_boost_time", except in Insane difficulty. If not set it will use the value in "proxies_crit_boost_time" instead.
// "proxies_crit_boost_time_nightmare" - Same as "proxies_crit_boost_time", except in Nightmare difficulty. If not set it will use the value in "proxies_crit_boost_time" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "proxies_health_regen" - Boolean (0/1) - Determins if the proxies spawned by the boss should be given the health regen attribute. Defaults to "0".

// "proxies_health_regen_value" - Float - Determins how much health regen a proxy should recieve after being spawned by the boss.
// "proxies_health_regen_value_easy" - Same as "health_regen_value", except in Easy difficulty. If not set it will use the value in "health_regen_value" instead.
// "proxies_health_regen_value_hard" - Same as "health_regen_value", except in Hard difficulty. If not set it will use the value in "health_regen_value" instead.
// "proxies_health_regen_value_insane" - Same as "health_regen_value", except in Insane difficulty. If not set it will use the value in "health_regen_value" instead.
// "proxies_health_regen_value_nightmare" - Same as "health_regen_value", except in Nightmare difficulty. If not set it will use the value in "health_regen_value" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "proxies_spawn_protection" - Boolean (0/1) - Determins if the proxies spawned by the boss should be granted with spawn protection. Defaults to "0".

// "proxies_spawn_protect_time" - Float - Determins how long a proxy should be protected from incoming damage after spawning in.
// "proxies_spawn_protect_time_easy" - Same as "proxies_spawn_protect_time", except in Easy difficulty. If not set it will use the value in "proxies_spawn_protect_time" instead.
// "proxies_spawn_protect_time_hard" - Same as "proxies_spawn_protect_time", except in Hard difficulty. If not set it will use the value in "proxies_spawn_protect_time" instead.
// "proxies_spawn_protect_time_insane" - Same as "proxies_spawn_protect_time", except in Insane difficulty. If not set it will use the value in "proxies_spawn_protect_time" instead.
// "proxies_spawn_protect_time_nightmare" - Same as "proxies_spawn_protect_time", except in Nightmare difficulty. If not set it will use the value in "proxies_spawn_protect_time" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "proxies_spawn_effect" - String (255) - Determins the particle that will appear when the proxy spawns.
// "proxies_player_size" - Float - Determins the size of proxy when spawning them. Defaults to "1.0", lowest allowed "0.25", highest allowed "2.0". (BUGGY)

// =============================================================
// 		PROXY INFECTION - Private Expansion		
// =============================================================

// Upon a players death, this expansion allows a boss to respawn the player as a Proxy.
// However, the conversion from Player to Proxy must be inflicted through the Boss or Proxies themselves.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "proxies_infect_enable" - Boolean (0/1) - Determins if the boss & proxies are able to infect killed users.
// "proxies_infect_mode" - Int - Determins the methods of infection that are allowed.

// Infect Mode Values for "proxies_infect_mode" are the following:
// ----------------------------------------------------------
// 0 = Both Boss & Proxy are able to infect killed players.
// 1 = Only Proxies are able to infect killed players.
// 2 = Only Bosses are able to infect killed players.

// "proxies_infect_delay" - Float - Determins how long of a delay before respawning the infected player as a Proxy. Defaults to "2.0".
// "proxies_infect_delay_easy" - Float - Same as "proxies_infect_delay", except for Easy Difficulty. If not set, it will use the value for Normal Difficulty, but divided by the Difficulty Modifer.
// "proxies_infect_delay_hard" - Float - Same as "proxies_infect_delay", except for Hard Difficulty. If not set, it will use the value for Normal Difficulty, but multiplied by the Difficulty Modifer.
// "proxies_infect_delay_insane" - Float - Same as "proxies_infect_delay", except for Insane Difficulty. If not set, it will use the value for Normal Difficulty, but multiplied by the Difficulty Modifer.
// "proxies_infect_delay_nightmare" - Float - Same as "proxies_infect_delay", except for Nightmare Difficulty. If not set, it will use the value for Normal Difficulty, but multiplied by the Difficulty Modifer.

// =============================================================
// 		PROXY WEAPONS - Private Expansion		
// =============================================================

// This system is intended to provide Proxies with a single additional weapon to make life harder for RED.
// Stats are based on the TF2Items format for assigning attributes. An example: "<attribute index> ; <attribute value>".
// ";" is used as the divider between each number in a sequence. There can only be a set amount of attributes assigned (8?).

// Here is a list of resources to help with obtaining the required data for this system.
// Attribute List: https://wiki.alliedmods.net/Team_fortress_2_item_definition_indexes
// Item Index & Class List: https://wiki.alliedmods.net/Team_fortress_2_item_definition_indexes

// Proxies will gain their weapons 1 second after spawning to avoid any possible item restrictions.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "proxies_weapon" - Boolean (0/1) - Determins if the boss provides weapons to it's proxies. Defaults to ("0").

// "proxies_weapon_class_<classname>" - String (128) - Determins the class type for the weapon. (Must be set).
// "proxies_weapon_stats_<classname>" - String (128) - Determins the attribute stats for the weapon. (Optional).
// "proxies_weapon_index_<classname>" - Int - Determins the index for the weapon. (Must be set & must match the weapon slot).
// "proxies_weapon_slot_<classname>" - Int - Determins the weapon slot the weapon goes into. "0 for Primary, 1 for Secondary, 2 for Melee". (Must be set & must match the weapon slot).

// =============================================================
// 		DAMAGE EFFECTS - Private Expansion		
// =============================================================

// Upon attacking a boss, these values will be checked to determin if the boss should apply some form of condition to the player.

// "player_damage_effects" - Boolean (0/1) - Determins if a boss has damage effects or not, this must be set to 1 if you intend to use Damage Effects! Defaults to "0".
// "player_attach_particle" - Boolean (0/1) - Determins if all particles spawned by the boss should parent to the player or not. Defaults to "1".

// "player_stun_type" - Int (0 > 3) - Determins, Stun Condition that is applied to the player. Defaults to "0". 

// Stun Type Values for "player_stun_type" are the following: (Affects Stun & Electrocute on Hit.)
// ----------------------------------------------------------
// 0 = Do Nothing
// 1 = Slow Condition Only
// 2 = Lower State + Slow Condition
// 3 = Full Stun + Slow Condition

// "player_jarate_on_hit" - Boolean (0/1) - Determins if the boss should apply the Jarate Condition to the player upon hit. Defaults to "0".

// "player_jarate_attack_indexs" - Int (Multi-Number) - Determins what attack index(s) should Jarate Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_jarate_particle" - String (256) - Determins the name of the particle that spawns when this effect is applied. Defaults to "peejar_impact".
// "player_jarate_sound" - String (256) - Determins the sound that will play when this effect is applied. Defaults to "weapons/jar_single.wav".

// "player_jarate_duration" - Float - Determins how long the player should be in the Jarate Condition for, defaults to 0 so you will need to set this.
// "player_jarate_duration_easy" - Same as "player_jarate_duration", except in Easy difficulty. If not set it will use the value in "player_jarate_duration" instead.
// "player_jarate_duration_hard" - Same as "player_jarate_duration", except in Hard difficulty. If not set it will use the value in "player_jarate_duration" instead.
// "player_jarate_duration_insane" - Same as "player_jarate_duration", except in Insane difficulty. If not set it will use the value in "player_jarate_duration" instead.
// "player_jarate_duration_nightmare" - Same as "player_jarate_duration", except in Nightmare difficulty. If not set it will use the value in "player_jarate_duration" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "player_milk_on_hit" - Boolean (0/1) - Determins if the boss should apply the Milk Condition to the player upon hit. Defaults to "0".

// "player_milk_attack_indexs" - Int (Multi-Number) - Determins what attack index(s) should Milk Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_milk_particle" - String (256) - Determins the name of the particle that spawns when this effect is applied. Defaults to "peejar_impact_milk".
// "player_milk_sound" - String (256) - Determins the sound that will play when this effect is applied. Defaults to "weapons/jar_single.wav".

// "player_milk_duration" - Float - Determins how long the player should be milked for, defaults to 0 so you will need to set this.
// "player_milk_duration_easy" - Same as "player_milk_duration", except in Easy difficulty. If not set it will use the value in "player_milk_duration" instead.
// "player_milk_duration_hard" - Same as "player_milk_duration", except in Hard difficulty. If not set it will use the value in "player_milk_duration" instead.
// "player_milk_duration_insane" - Same as "player_milk_duration", except in Insane difficulty. If not set it will use the value in "player_milk_duration" instead.
// "player_milk_duration_nightmare" - Same as "player_milk_duration", except in Nightmare difficulty. If not set it will use the value in "player_milk_duration" instead.

// "player_gas_on_hit" - Boolean (0/1) - Determins if the boss should apply the Gas Condition to the player upon hit. Defaults to "0".

// "player_gas_attack_indexs" - Int (Multi-Number) Determins what attack index(s) should Gas Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_gas_particle" - String (256) - Determins the name of the particle that spawns when this effect is applied. Defaults to "gas_can_impact_blue".
// "player_gas_sound" - String (256) - Determins the sound that will play when this effect is applied. Defaults to "weapons/jar_single.wav".

// "player_gas_duration" - Float - Determins how long the player should be gased for, defaults to 0 so you will need to set this.
// "player_gas_duration_easy" - Same as "player_gas_duration", except in Easy difficulty. If not set it will use the value in "player_gas_duration" instead.
// "player_gas_duration_hard" - Same as "player_gas_duration", except in Hard difficulty. If not set it will use the value in "player_gas_duration" instead.
// "player_gas_duration_insane" - Same as "player_gas_duration", except in Insane difficulty. If not set it will use the value in "player_gas_duration" instead.
// "player_gas_duration_nightmare" - Same as "player_gas_duration", except in Nightmare difficulty. If not set it will use the value in "player_gas_duration" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "player_mark_on_hit" - Boolean (0/1) - Determins if the boss should apply the Marked for Death Condition to the player upon hit. Defaults to "0".

// "player_mark_attack_indexs" - Int (Multi-Number) Determins what attack index(s) should Mark Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_mark_duration" - Float- Determins how long the player should be marked for, defaults to 0 so you will need to set this.
// "player_mark_duration_easy" - Same as "player_mark_duration", except in Easy difficulty. If not set it will use the value in "player_mark_duration" instead.
// "player_mark_duration_hard" - Same as "player_mark_duration", except in Hard difficulty. If not set it will use the value in "player_mark_duration" instead.
// "player_mark_duration_insane" - Same as "player_mark_duration", except in Insane difficulty. If not set it will use the value in "player_mark_duration" instead.
// "player_mark_duration_nightmare" - Same as "player_mark_duration", except in Nightmare difficulty. If not set it will use the value in "player_mark_duration" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "player_ignite_on_hit" - Boolean (0/1) - Determins if the boss should apply the Ignite Condition to the player upon hit. Defaults to "0".

// "player_ignite_attack_indexs" - Int (Multi-Number) - Determins what attack index(s) should Ignite Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_ignite_delay" - Float- Determins how long it will take before the player is ignited after hit, min value must be 0.1 second. Best suited to go with other damage effects.
// "player_ignite_delay_easy" - Same as "player_ignite_delay", except in Easy difficulty. If not set it will use the value in "player_ignite_delay" instead.
// "player_ignite_delay_hard" - Same as "player_ignite_delay", except in Hard difficulty. If not set it will use the value in "player_ignite_delay" instead.
// "player_ignite_delay_insane" - Same as "player_ignite_delay", except in Insane difficulty. If not set it will use the value in "player_ignite_delay" instead.
// "player_ignite_delay_nightmare" - Same as "player_ignite_delay", except in Nightmare difficulty. If not set it will use the value in "player_ignite_delay" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "player_stun_on_hit" - Boolean (0/1) - Determins if the boss should apply the Stun Condition to the player upon hit. Defaults to "0".

// "player_stun_attack_indexs" - Int (Multi-Number) - Determins what attack index(s) should Stun Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_stun_particle" - String (256) - Determins the name of the particle that spawns when this effect is applied. Defaults to "xms_icicle_melt".
// "player_stun_sound" - String (256) - Determins the sound that will play when this effect is applied. Defaults to "weapons/icicle_freeze_victim_01.wav".

// "player_stun_duration" - Float - Determins how long the player should be stunned for, defaults to 0 so you will need to set this.
// "player_stun_duration_easy" - Same as "player_stun_duration", except in Easy difficulty. If not set it will use the value in "player_stun_duration" instead.
// "player_stun_duration_hard" - Same as "player_stun_duration", except in Hard difficulty. If not set it will use the value in "player_stun_duration" instead.
// "player_stun_duration_insane" - Same as "player_stun_duration", except in Insane difficulty. If not set it will use the value in "player_stun_duration" instead.
// "player_stun_duration_nightmare" - Same as "player_stun_duration", except in Nightmare difficulty. If not set it will use the value in "player_stun_duration" instead.

// "player_stun_slowdown" - Float - Determins in percent value, how much a player should be slowed down by. NOTE: Values below 50% tend to play the player travel faster.
// "player_stun_slowdown_easy" - Same as "player_stun_slowdown", except in Easy difficulty. If not set it will use the value in "player_stun_slowdown" instead.
// "player_stun_slowdown_hard" - Same as "player_stun_slowdown", except in Hard difficulty. If not set it will use the value in "player_stun_slowdown" instead.
// "player_stun_slowdown_insane" - Same as "player_stun_slowdown", except in Insane difficulty. If not set it will use the value in "player_stun_slowdown" instead.
// "player_stun_slowdown_nightmare" - Same as "player_stun_slowdown", except in Nightmare difficulty. If not set it will use the value in "player_stun_slowdown" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "player_bleed_on_hit" - Boolean (0/1) - Determins if the boss should apply the Bleed Condition to the player upon hit. Defaults to "0".

// "player_bleed_attack_indexs" - Int (Multi-Number) Determins what attack index(s) should Bleed Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_bleed_duration" Determins how long the player should be bleed for, defaults to 0 so you will need to set this.
// "player_bleed_duration_easy" - Same as "player_bleed_duration", except in Easy difficulty. If not set it will use the value in "player_bleed_duration" instead.
// "player_bleed_duration_hard" - Same as "player_bleed_duration", except in Hard difficulty. If not set it will use the value in "player_bleed_duration" instead.
// "player_bleed_duration_insane" - Same as "player_bleed_duration", except in Insane difficulty. If not set it will use the value in "player_bleed_duration" instead.
// "player_bleed_duration_nightmare" - Same as "player_bleed_duration", except in Nightmare difficulty. If not set it will use the value in "player_bleed_duration" instead.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "player_electric_slow_on_hit" - Boolean (0/1) - Determins if the boss should electrocute the player. Defaults to "0".

// "player_electrocute_attack_indexs" - Int (Multi-Number) Determins what attack index(s) should Electrocute Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_electric_red_particle" - String (256) Determins the name of the particle that spawns when this effect is applied for RED Players. Defaults to "electrocuted_gibbed_red".
// "player_electric_blue_particle" - String (256) Determins the name of the particle that spawns when this effect is applied for BLUE Players. Defaults to "electrocuted_gibbed_red".

// "player_electric_slow_duration" Determins how long the player should be slowed for, defaults to 0 so you will need to set this.
// "player_electric_slow_duration_easy" - Same as "player_slow_duration", except in Easy difficulty. If not set it will use the value in "player_electric_slow_duration" instead.
// "player_electric_slow_duration_hard" - Same as "player_slow_duration", except in Hard difficulty. If not set it will use the value in "player_electric_slow_duration" instead.
// "player_electric_slow_duration_insane" - Same as "player_slow_duration", except in Insane difficulty. If not set it will use the value in "player_electric_slow_duration" instead.
// "player_electric_slow_duration_nightmare" - Same as "player_slow_duration", except in Nightmare difficulty. If not set it will use the value in "player_electric_slow_duration" instead.

// "player_electric_slow_slowdown" Determins in percent value, how much a player should be slowed down by. NOTE: Values below 50% tend to play the player travel faster.
// "player_electric_slow_slowdown_easy" - Same as "player_electric_slow_slowdown", except in Easy difficulty. If not set it will use the value in "player_electric_slow_slowdown" instead.
// "player_electric_slow_slowdown_hard" - Same as "player_electric_slow_slowdown", except in Hard difficulty. If not set it will use the value in "player_electric_slow_slowdown" instead.
// "player_electric_slow_slowdown_insane" - Same as "player_electric_slow_slowdown", except in Insane difficulty. If not set it will use the value in "player_electric_slow_slowdown" instead.
// "player_electric_slow_slowdown_nightmare" - Same as "player_electric_slow_slowdown", except in Nightmare difficulty. If not set it will use the value in "player_electric_slow_slowdown" instead.


// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "player_smite_on_hit" - Boolean (0/1) - Determins if the boss can smite the player upon damaging them, this will result in instant death! Defaults to "0".

// "player_smite_attack_indexs" - Int (Multi-Number) - Determins what attack index(s) should Smite Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23.

// "player_smite_message" - Boolean (0/1) - Determins if the boss can play global ambient sounds and print fake messages to chat. Defaults to "0".

// "player_smite_damage" - Float - Determins the amount of damage to apply to the player when smited. Stacks with boss attacks. Defaults to "9001.0".
// "player_smite_damage_type" - Int - Determins the damage type when applying damage from smite. Defaults to Crit Damage Type. (Because I am mean, yes).

// "player_smite_color_r" - Int (0 > 255) - Determins the RED value of the Smite Color. Defaults to "255"
// "player_smite_color_g" - Int (0 > 255) - Determins the GREEN value of the Smite Color. Defaults to "255"
// "player_smite_color_b" - Int (0 > 255) - Determins the BLUE value of the Smite Color. Defaults to "255"
// "player_smite_transparency" - Int (0 > 255) - Determins the transparency/alpha value of the Smite Color. Defaults to "255"

// =====================================================================
// 		PROJECTILE & AURA ABILITIES - Private Expansion		
// =====================================================================

// Provides the boss with the ability to either spawn projectiles. Supports Fireballs, Iceballs and Customizable Rockets
// -----------------------------------------------------------------------------------------------------------------------------------------------------

// "projectile_enable" - Boolean (0/1) - Determins if the boss should be able to spawn fireballs. Defaults to "0".

// "projectile_cooldown_min" - Float - Determins the min cooldown time that is applied after a boss spawns a projectile. Defaults to "1.0" seconds.
// "projectile_cooldown_min_easy" - Same as "projectile_cooldown_min", except in Easy difficulty. If not set, value will be set to "1.0" times by the difficulty modifier.
// "projectile_cooldown_min_hard" - Same as "projectile_cooldown_min", except in Hard difficulty. If not set, value will be set to "1.0" divided by the difficulty modifier.
// "projectile_cooldown_min_insane" - Same as "projectile_cooldown_min", except in Insane difficulty. If not set, value will be set to "1.0" divided by the difficulty modifier.
// "projectile_cooldown_min_nightmare" - Same as "projectile_cooldown_min", except in Nightmare difficulty. If not set, value will be set to "1.0" divided by the difficulty modifier.

// "projectile_cooldown_max" - Float - Determins the max cooldown time that is applied after a boss spawns a projectile. Defaults to "2.0" seconds.
// "projectile_cooldown_max_easy" - Same as "projectile_cooldown_max", except in Easy difficulty. If not set, value will be set to "2.0" times by the difficulty modifier.
// "projectile_cooldown_max_hard" - Same as "projectile_cooldown_max", except in Hard difficulty. If not set, value will be set to "2.0" divided by the difficulty modifier.
// "projectile_cooldown_max_insane" - Same as "projectile_cooldown_max", except in Insane difficulty. If not set, value will be set to "2.0" divided by the difficulty modifier.
// "projectile_cooldown_max_nightmare" - Same as "projectile_cooldown_max", except in Nightmare difficulty. If not set, value will be set to "2.0" divided by the difficulty modifier.

// "projectile_speed" - Float - Determins how fast the fireball will travel towards a target once spawned. Defaults to "400.0".
// "projectile_speed_easy" - Same as "projectile_speed", except in Easy difficulty. If not set, value will be set to "400.0" divided by the difficulty modifier.
// "projectile_speed_hard" - Same as "projectile_speed", except in Hard difficulty. If not set, value will be set to "400.0" times by the difficulty modifier.
// "projectile_speed_insane" - Same as "projectile_speed", except in Insane difficulty. If not set, value will be set to "400.0" times by the difficulty modifier.
// "projectile_speed_nightmare" - Same as "projectile_speed", except in Nightmare difficulty. If not set, value will be set to "400.0" times by the difficulty modifier.

// "projectile_damage" - Float - Determins how much damage players will take from the fireball when it explodes. Defaults to "50.0".
// "projectile_damage_easy" - Same as "projectile_damage", except in Easy difficulty. If not set, value will be set to "50.0" divided by the difficulty modifier.
// "projectile_damage_hard" - Same as "projectile_damage", except in Hard difficulty. If not set, value will be set to "50.0" times by the difficulty modifier.
// "projectile_damage_insane" - Same as "projectile_damage", except in Insane difficulty. If not set, value will be set to "50.0" times by the difficulty modifier.
// "projectile_damage_nightmare" - Same as "projectile_damage", except in Nightmare difficulty. If not set, value will be set to "50.0" times by the difficulty modifier.

// "projectile_damageradius" - Float - Determins how far the explosion from the projectile should reach. Defaults to "128.0"
// "projectile_damageradius_easy" - Same as "projectile_damageradius", except in Easy difficulty. If not set, value will be set to "128.0" divided by the difficulty modifier.
// "projectile_damageradius_hard" - Same as "projectile_damageradius", except in Hard difficulty. If not set, value will be set to "128.0" times by the difficulty modifier.
// "projectile_damageradius_insane" - Same as "projectile_damageradius", except in Insane difficulty. If not set, value will be set to "128.0" times by the difficulty modifier.
// "projectile_damageradius_nightmare" - Same as "projectile_damageradius", except in Nightmare difficulty. If not set, value will be set to "128.0" times by the difficulty modifier.

// "projectile_pos_number_min" - Int - Determins the min possible positions for the projectile to spawn at. Defaults to "1".
// "projectile_pos_number_max" - Int - Determins the max possible positions for the projectile to spawn at. Defaults to "1".
// "projectile_pos_offset_#" - Vector - Determins the position of the projectile when it spawns. Defaults to "0 0 0". Supports random positions based on above settings.

// "projectile_type" - Int (0 > 2) - Determins the type that the fireball should be when spawning and hitting a target. Defaults to "0" for Fireball, "1" for Iceball, "2" for Rockets.

// "projectile_iceslow_duration" - Float - Determins how long the player should be slowed for, when hit by an Iceball. Defaults to "2.0" seconds. Requires "fireball_type" to be set to 1.
// "projectile_iceslow_duration_easy" - Same as "fireball_iceslow_duration", except in Easy difficulty. If not set, value will be set to "2.0" divided by the difficulty modifier.
// "projectile_iceslow_duration_hard" - Same as "fireball_iceslow_duration", except in Hard difficulty. If not set, value will be set to "2.0" times by the difficulty modifier.
// "projectile_iceslow_duration_insane" - Same as "fireball_iceslow_duration", except in Insane difficulty. If not set, value will be set to "2.0" times by the difficulty modifier.
// "projectile_iceslow_duration_nightmare" - Same as "fireball_iceslow_duration", except in Nightmare difficulty. If not set, value will be set to "2.0" times by the difficulty modifier.

// "projectile_iceslow_percent" - Float - Determins how much the player should be slowed by, when hit by an Iceball. Defaults to "0.55". Requires "fireball_type" to be set to 1.
// "projectile_iceslow_percent_easy" - Same as "fireball_iceslow_percent", except in Easy difficulty. If not set, value will be set to "0.55" divided by the difficulty modifier.
// "projectile_iceslow_percent_hard" - Same as "fireball_iceslow_percent", except in Hard difficulty. If not set, value will be set to "0.55" times by the difficulty modifier.
// "projectile_iceslow_percent_insane" - Same as "fireball_iceslow_percent", except in Insane difficulty. If not set, value will be set to "0.55" times by the difficulty modifier.
// "projectile_iceslow_percent_nightmare" - Same as "fireball_iceslow_percent", except in Nightmare difficulty. If not set, value will be set to "0.55" times by the difficulty modifier.

// "fire_explode_sound" - String (256) - Determins the sound that plays when the fireball explodes. Defaults to ("misc/halloween/spell_fireball_impact.wav").
// "fire_shoot_sound" - String (256) - Determins the sound that plays when the fireball spawns. Defaults to ("misc/halloween/spell_fireball_cast.wav").
// "fire_iceball_slow_sound" - String (256) - Determins the sound that plays to victims hit by the iceball. Requires "fireball_type" to be set to 1. Defaults to ("weapons/icicle_freeze_victim_01.wav").

// "rocket_explode_sound" - String (256) - Determins the sound that plays when the rocket explodes. Defaults to ("weapons/explode1.wav").
// "rocket_shoot_sound" - String (256) - Determins the sound that plays when the rocket spawns. Defaults to ("weapons/rocket_shoot.wav").
// "rocket_model" - String (256) - Determins the model of the rocket when it spawns. Defaults to ("models/weapons/w_models/w_rocket.mdl").
// "rocket_trail_particle" - String (256) - Determins the name of the particle that follows the rocket. Defaults to ("rockettrail").
// "rocket_explode_particle" - String (256) - Determins the name of the particle that spawns when the rocket explodes. Defaults to ("ExplosionCore_MidAir").


// Provides the boss with the ability to spawn an aura around them. That will apply an effect to clients when they're in them.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "aura_enable" - Boolean (0/1) - Determins if the boss should be able to generate an aura around them. Defaults to "0".
// "aura_type" - Int (0 > 2) - Determins the type of Aura to spawn on each 0.5 second pulse. 0 for Fire Ring, 1 for Ice Cloud, 2 for Toxic Smoke. Defaults to "0".

// "aura_range" - Float - Determins how far the aura reaches out on each pulse. Defaults to "128.0"
// "aura_range_easy" - Same as "aura_range", except in Easy difficulty. If not set, value will be "128.0" divided by difficulty modifier.
// "aura_range_hard" - Same as "aura_range", except in Hard difficulty. If not set, value will be "128.0" times by difficulty modifier.
// "aura_range_insane" - Same as "aura_range", except in Insane difficulty. If not set, value will be "128.0" times by difficulty modifier.
// "aura_range_nightmare" - Same as "aura_range", except in Nightmare difficulty. If not set, value will be "128.0" times by difficulty modifier.

// "aura_duration" - Float - Determins how long (in seconds) should the affect last on players caught in the aura. Defaults to "1.0" if Ice Cloud, "3.0" if Toxic Smoke.
// "aura_duration_easy" - Same as "aura_duration", except in Easy difficulty. If not set, value will be "1.0 / 3.0" divided by difficulty modifier.
// "aura_duration_hard" - Same as "aura_duration", except in Hard difficulty. If not set, value will be "1.0 / 3.0" times by difficulty modifier.
// "aura_duration_insane" - Same as "aura_duration", except in Insane difficulty. If not set, value will be "1.0 / 3.0" times by difficulty modifier.
// "aura_duration_nightmare" - Same as "aura_duration", except in Nightmare difficulty. If not set, value will be "1.0 / 3.0" times by difficulty modifier.

// "aura_percent" - Float - Determins the slowdown percent to be applied if caught in the aura. Defaults to "0.6" percent. Works for Ice Cloud only.
// "aura_percent_easy" - Same as "aura_percent", except in Easy difficulty. If not set, value will be "1.0 / 3.0" divided by difficulty modifier.
// "aura_percent_hard" - Same as "aura_percent", except in Hard difficulty. If not set, value will be "1.0 / 3.0" times by difficulty modifier.
// "aura_percent_insane" - Same as "aura_percent", except in Insane difficulty. If not set, value will be "1.0 / 3.0" times by difficulty modifier.
// "aura_percent_nightmare" - Same as "aura_percent", except in Nightmare difficulty. If not set, value will be "1.0 / 3.0" times by difficulty modifier.

// =============================================================
// 		GRENADE ABILITIES - Private Expansion		
// =============================================================

// Provides the boss with the ability to throw Grenades at a target.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "grenade_ability" - Boolean (0/1) - Determins if the boss should be able to throw grenades at players. Defaults to "0".

// "grenade_type" - Int - Determins the type of grenade that spawns by default. 0 for explosives, 1 for gas, 2 for fire. Defaults to "0".
// "grenade_type_rng" - Boolean (0/1) - Determins if the type of grenade should change prior to throwing them. Defaults to "0".
// "grenade_type_rng_range" - String (256) - Determins the types of grenades that can be picked at random. Defaults to "0 1 2".

// "grenade_min_range" - Float - Determins the min range the bosses chase target has to be from the boss before throwing grenades.
// "grenade_max_range" - Float - Determins the max range the bosses chase target has to be from the boss before throwing grenades.

// "grenade_adjust_pos" - Vector - Adjusts the position of the grenades spawn point. Defaults to "0 0 45"
// "grenade_adjust_ang" - Vector - Adjusts the rotation of the grenades upon spawning. Defaults to "0 0 0"

// "grenade_damage" - Float - Determins the amount of damage a grenade deals upon exploding. Defaults to "12" Damage.
// "grenade_damage_easy" - Same as "grenade_damage", except in Easy difficulty. If not set, value will be set to "12.0" divided by the difficulty modifier.
// "grenade_damage_hard" - Same as "grenade_damage", except in Hard difficulty. If not set, value will be set to "12.0" times by the difficulty modifier.
// "grenade_damage_insane" - Same as "grenade_damage", except in Insane difficulty. If not set, value will be set to "12.0" times by the difficulty modifier.
// "grenade_damage_nightmare" - Same as "grenade_damage", except in Nightmare difficulty. If not set, value will be set to "12.0" times by the difficulty modifier.

// "grenade_cooldown" - Float - Determins how long the grenade ability should go on cooldown, preventing it from being used during that time. Defaults to "20.0" Seconds.
// "grenade_cooldown_easy" - Same as "grenade_cooldown", except in Easy difficulty. If not set, value will be set to "20.0" times by the difficulty modifier.
// "grenade_cooldown_hard" - Same as "grenade_cooldown", except in Hard difficulty. If not set, value will be set to "20.0" divided by the difficulty modifier.
// "grenade_cooldown_insane" - Same as "grenade_cooldown", except in Insane difficulty. If not set, value will be set to "20.0" divided by the difficulty modifier.
// "grenade_cooldown_nightmare" - Same as "grenade_cooldown", except in Nightmare difficulty. If not set, value will be set to "20.0" divided by the difficulty modifier.

// "grenade_speed" - Float - Determins the initial speed that the grenades travel at after spawning. Defaults to "900.0".
// "grenade_speed_easy" - Same as "grenade_speed", except in Easy difficulty. If not set, value will be set to "900.0" divided by the difficulty modifier.
// "grenade_speed_hard" - Same as "grenade_speed", except in Hard difficulty. If not set, value will be set to "900.0" times by the difficulty modifier.
// "grenade_speed_insane" - Same as "grenade_speed", except in Insane difficulty. If not set, value will be set to "900.0" times by the difficulty modifier.
// "grenade_speed_nightmare" - Same as "grenade_speed", except in Nightmare difficulty. If not set, value will be set to "900.0" times by the difficulty modifier.

// "grenade_fuse" - Float - Determins how long it'll take for a grenade to explode after spawning. Defaults to "2.0" Seconds.
// "grenade_fuse_easy" - Same as "grenade_fuse", except in Easy difficulty. If not set, value will be set to "2.0" divided by the difficulty modifier.
// "grenade_fuse_hard" - Same as "grenade_fuse", except in Hard difficulty. If not set, value will be set to "2.0" times by the difficulty modifier.
// "grenade_fuse_insane" - Same as "grenade_fuse", except in Insane difficulty. If not set, value will be set to "2.0" times by the difficulty modifier.
// "grenade_fuse_nightmare" - Same as "grenade_fuse", except in Nightmare difficulty. If not set, value will be set to "2.0" times by the difficulty modifier.

// "grenade_blast_range" - Float - Determins the blast range for the grenade when it explodes. Defaults to "256.0".
// "grenade_blast_range_easy" - Same as "grenade_blast_range", except in Easy difficulty. If not set, value will be set to "256.0" divided by the difficulty modifier.
// "grenade_blast_range_hard" - Same as "grenade_blast_range", except in Hard difficulty. If not set, value will be set to "256.0" times by the difficulty modifier.
// "grenade_blast_range_insane" - Same as "grenade_blast_range", except in Insane difficulty. If not set, value will be set to "256.0" times by the difficulty modifier.
// "grenade_blast_range_nightmare" - Same as "grenade_blast_range", except in Nightmare difficulty. If not set, value will be set to "256.0" times by the difficulty modifier.

// "grenade_duration" - Float - Determins how long the grenade throwing should last for. Sync up with animation provided in "animation_grenade". Defaults to "4.0" seconds.
// "grenade_interval" - Float - Determins how often a grenade should be spawned during the grenade throwing duration. Sync up with animation provided in "animation_grenade". Defaults to "0.3" seconds.

// "animation_grenade" - String (256) - Determins the animation that plays when the boss throws grenades. Needs to be set or boss will use default model animation.
// "animation_grenade_playbackrate" - Float (0.0 > 8.0) - Determins the playback rate of the animation provided by "animation_grenade". Defaults to "1.0". 

// "grenade_model" - String (256) - Determins the model of the grenade when it spawns. Defaults to ("models/weapons/w_models/w_grenade_grenadelauncher.mdl").

// "sound_grenade_taunt" - String (256) - Determins the sound that plays when the boss begins throwing grenades. Defaults to ("misc/null.wav").
// "sound_grenade_throw" - String (256) - Determins the sound that plays when a grenade is spawned. Defaults to ("weapons/cleaver_throw.wav").

// "sound_grenade_explode_count" - Int - Determins the amount of explosion sounds to pick between when a grenade explodes. Defaults to "3".
// "sound_grenade_explode_#" - String (256) - Determins the explosion sound to play when the grenade explodes. Counts up from 1 to max set by "sound_grenade_explode_count". Defaults to ("weapons/airstrike_small_explosion_0#.wav").

// =============================================================
// 		HAZARDS ABILITIES - Private Expansion		
// =============================================================

// Provides the boss with the ability to use hazards such as Oil Spills and Acid Spit.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "acid_spit_enabled" - Boolean (0/1) - Determins if the boss can spawn Acid Spit on Attack. Defaults to "0".
// "acid_spit_attack_index" - Int - The Attack Indexs to use with the Acid Pools. Index needs to be given to function. Defaults to "0" for disabled.

// "acid_spit_lifetime" - Float - Determins how long the acid spit should last for. Defaults to "6.0" seconds.
// "acid_spit_lifetime_easy" - Same as "acid_spit_lifetime", except in Easy difficulty. If not set, value will be set to "6.0" divided by the difficulty modifier.
// "acid_spit_lifetime_hard" - Same as "acid_spit_lifetime", except in Hard difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.
// "acid_spit_lifetime_insane" - Same as "acid_spit_lifetime", except in Insane difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.
// "acid_spit_lifetime_nightmare" - Same as "acid_spit_lifetime", except in Nightmare difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.

// "oil_spill_enabled" - Boolean (0/1) - Determins if the boss can spawn Oil Spill on Spawn, Despawn & Attack. Defaults to "0".
// "oil_spill_attack_index" - Int - The Attack Indexs to use with Oil Spill. Index needs to give to function for Attacks. Defaults to "0" for disabled.

// "oil_spill_lifetime" - Float - Determins how long the acid spit should last for. Defaults to "6.0" seconds.
// "oil_spill_lifetime_easy" - Same as "oil_spill_lifetime", except in Easy difficulty. If not set, value will be set to "6.0" divided by the difficulty modifier.
// "oil_spill_lifetime_hard" - Same as "oil_spill_lifetime", except in Hard difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.
// "oil_spill_lifetime_insane" - Same as "oil_spill_lifetime", except in Insane difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.
// "oil_spill_lifetime_nightmare" - Same as "oil_spill_lifetime", except in Nightmare difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.

// "oil_spill_stun_type" - Int - Determins how the Oil Spill stuns the player. Defaults to "1".

// Stun Type Values for "oil_spill_stun_type" are the following:
// ----------------------------------------------------------
// 0 = No Stun
// 1 = Stun Scales with Blinding
// 2 = Full Stun

// =============================================================
// 		TRAP ABILITIES - Private Expansion		
// =============================================================

// Provides the boss with the ability to deploy traps to catch players.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "traps_enabled" - Boolean (0/1) - Determins if the boss should be able to deploy traps. Defaults to "0".

// "trap_type" - Int - Determins the type of trap that the boss will deploy. Defaults to "0".

// Trap Type Values for "trap_type" are the following:
// ----------------------------------------------------------
// 0 = Bear Trap

// "trap_spawn_cooldown" - Float - Determins how long the cooldown should be for the bosses next trap deploy time. Defaults to "8.0" seconds.
// "trap_spawn_cooldown_easy" - Same as "trap_spawn_cooldown", except in Easy difficulty. If not set, value will be set to "8.0" divided by the difficulty modifier.
// "trap_spawn_cooldown_hard" - Same as "trap_spawn_cooldown", except in Hard difficulty. If not set, value will be set to "8.0" times by the difficulty modifier.
// "trap_spawn_cooldown_insane" - Same as "trap_spawn_cooldown", except in Insane difficulty. If not set, value will be set to "8.0" times by the difficulty modifier.
// "trap_spawn_cooldown_nightmare" - Same as "trap_spawn_cooldown", except in Nightmare difficulty. If not set, value will be set to "8.0" times by the difficulty modifier.

// =============================================================
// 		TONGUE ABILITIES - Private Expansion		
// =============================================================

// Provides the boss with the ability to catch players at long distances. Upon touching a target with the rope, the boss will proceed to pull them in.
// Players must stun the boss or hit the caught player in order to free them. Hitting the player directly will give them speed boosts.
// The caught player will take damage and will be moved closer to the boss on each time the boss pulls on the tongue.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "tongue_ability" - Boolean (0/1) - Determins if the boss should be able to deploy a tongue. Defaults to "0".

// "tongue_min_range" - Float - Determins the min amount of distance a player needs to be before attempting to catch the player. Defaults to "400.0".
// "tongue_max_range" - Float - Determins the max amount of distance a player can be before attempting to catch the player. Defaults to "1000.0".

// "tongue_cooldown" - Float - Determins how long the cooldown should be for the bosses next attempt at throwing a tongue. Defaults to "20.0" seconds.
// "tongue_cooldown_easy" - Same as "tongue_cooldown", except in Easy difficulty. If not set, value will be set to "20.0" divided by the difficulty modifier.
// "tongue_cooldown_hard" - Same as "tongue_cooldown", except in Hard difficulty. If not set, value will be set to "20.0" times by the difficulty modifier.
// "tongue_cooldown_insane" - Same as "tongue_cooldown", except in Insane difficulty. If not set, value will be set to "20.0" times by the difficulty modifier.
// "tongue_cooldown_nightmare" - Same as "tongue_cooldown", except in Nightmare difficulty. If not set, value will be set to "20.0" times by the difficulty modifier.

// "tongue_damage" - Float - Determins how much damage should a caught player take on each pull attempt. Defaults to "7.0".
// "tongue_damage_easy" - Same as "tongue_damage", except in Easy difficulty. If not set, value will be set to "7.0" divided by the difficulty modifier.
// "tongue_damage_hard" - Same as "tongue_damage", except in Hard difficulty. If not set, value will be set to "7.0" times by the difficulty modifier.
// "tongue_damage_insane" - Same as "tongue_damage", except in Insane difficulty. If not set, value will be set to "7.0" times by the difficulty modifier.
// "tongue_damage_nightmare" - Same as "tongue_damage", except in Nightmare difficulty. If not set, value will be set to "7.0" times by the difficulty modifier.

// "tongue_speed" - Float - Determins quickly the tongue will travel after the boss has thrown it towards a player. Defaults to "900.0".
// "tongue_speed_easy" - Same as "tongue_speed", except in Easy difficulty. If not set, value will be set to "900.0" divided by the difficulty modifier.
// "tongue_speed_hard" - Same as "tongue_speed", except in Hard difficulty. If not set, value will be set to "900.0" times by the difficulty modifier.
// "tongue_speed_insane" - Same as "tongue_speed", except in Insane difficulty. If not set, value will be set to "900.0" times by the difficulty modifier.
// "tongue_speed_nightmare" - Same as "tongue_speed", except in Nightmare difficulty. If not set, value will be set to "900.0" times by the difficulty modifier.

// "tongue_pull_scale" - Float - Determins the scale mulitplier of the force that pulls the caught player towards the boss. Defaults to "6.0".
// "tongue_pull_scale_easy" - Same as "tongue_pull_scale", except in Easy difficulty. If not set, value will be set to "6.0" divided by the difficulty modifier.
// "tongue_pull_scale_hard" - Same as "tongue_pull_scale", except in Hard difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.
// "tongue_pull_scale_insane" - Same as "tongue_pull_scale", except in Insane difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.
// "tongue_pull_scale_nightmare" - Same as "tongue_pull_scale", except in Nightmare difficulty. If not set, value will be set to "6.0" times by the difficulty modifier.

// The following need to be set per boss.
// "tongue_material" - String (255) - Determins the material used for the tongue. Defaults to "".

// "tongue_launch_sound" - String (255) - Determins the sound that plays when the boss launches the tongue. Defaults to "".
// "tongue_launch_sound_volume" - Float - Determins the max volume of the Tounges Launch Sound. Defaults to "1.0".
// "tongue_launch_sound_pitch" - Int - Determins the pitch of the Tongues Launch Sound. Defaults to "100."

// "tongue_tied_sound" - String (255) - Determins the sound that plays when the tongue catches a player. Defaults to "".
// "tongue_tied_sound_volume" - Float - Determins the max volume of the Tounges Tied Sound. Defaults to "1.0".
// "tongue_tied_sound_pitch" - Int - Determins the pitch of the Tongues Tied Sound. Defaults to "100."

// "tongue_hit_sound" - String (255) - Determins the sound that players on a tongue hits a player. Defaults to "".
// "tongue_hit_sound_volume" - Float - Determins the max volume of the Tounges Hit Sound. Defaults to "1.0".
// "tongue_hit_sound_pitch" - Int - Determins the pitch of the Tongues Hit Sound. Defaults to "100."

// "tongue_shoot_pos_offset" - Vector (3) - Determins where the start position of the tongue should be, relative to the bosses position. Defaults to "0 0 0".

// The following is broken as attachtments break any use of the TeleportEntity() function.
// "tongue_attachement" - String (255) - Determins if the start position of the tongue should be on an attachtment point on the bosses model. Defaults to "".

// "animation_tongue_start" - String (255) - Determins the animation that plays when the boss launches their tongue. Defaults to "".
// "animation_tongue_start_playbackrate" - Float - Determins the playback rate of the Tongue Start Animation. Defaults to "1.0".

// "animation_tongue_pull" - String (255) - Determins the animation that plays when the boss pulls in a caught player. Defaults to "".
// "animation_tongue_pull_playbackrate" - Float - Determins the playback rate of the Tongue Pull Animation. Defaults to "1.0".

// =============================================================
// 		SHOCKWAVE ABILITIES - Private Expansion		
// =============================================================

// Provides the boss with the ability to deploy an AoE Shockwave Attack upon attacking a target. Any players caught in the radius will be affected.
// Depending on configuration the effects can range from Flashlight Drain, Knockback & Stunning.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "shockwave" - Boolean (0/1) - Determins if the boss should be able to deploy shock waves on attack. (Defaults to "0").

// "shockwave_beam_sprite - String (255) - Determins the Beam Sprite of the Shockwave Effect. (Defaults to "sprites/laser.vmt").
// "shockwave_halo_sprite - String (255) - Determins the Halo Sprite of the Shockwave Effect. (Defaults to "sprites/halo01.vmt").

// "shockwave_color_1" - Vector - Determins the RGB Color of the first part of the Shockwave Effect. (Defaults to "128 128 128").
// "shockwave_alpha_1" - Int - Determins the transparency of the first part of the Shockwave Effect. (Defaults to "255").

// "shockwave_color_2" - Vector - Determins the RGB Color of the second part of the Shockwave Effect. (Defaults to "255 255 255").
// "shockwave_alpha_2" - Int - Determins the transparency of the second part of the Shockwave Effect. (Defaults to "255").

// "shockwave_height" - Float - Determins the max height distance allowed when performing a distance check for the Shock Wave. (Defaults to "64.0").
// "shockwave_height_easy" - Same as "shockwave_height", except in Easy difficulty. If not set, value will be set to ("64.0") divided by the difficulty modifier.
// "shockwave_height_hard" - Same as "shockwave_height", except in Hard difficulty. If not set, value will be set to ("64.0") times by the difficulty modifier.
// "shockwave_height_insane" - Same as "shockwave_height", except in Insane difficulty. If not set, value will be set to ("64.0") times by the difficulty modifier.
// "shockwave_height_nightmare" - Same as "shockwave_height", except in Nightmare difficulty. If not set, value will be set to ("64.0") times by the difficulty modifier.

// "shockwave_range" - Float - Determins the max range that the Shock Wave will travel. (Defaults to "200.0").
// "shockwave_range_easy" - Same as "shockwave_range", except in Easy difficulty. If not set, value will be set to ("200.0") divided by the difficulty modifier.
// "shockwave_range_hard" - Same as "shockwave_range", except in Hard difficulty. If not set, value will be set to ("200.0") times by the difficulty modifier.
// "shockwave_range_insane" - Same as "shockwave_range", except in Insane difficulty. If not set, value will be set to ("200.0") times by the difficulty modifier.
// "shockwave_range_nightmare" - Same as "shockwave_range", except in Nightmare difficulty. If not set, value will be set to ("200.0") times by the difficulty modifier.

// "shockwave_drain" - Float - Determins how much to drain from a players flashlight upon hitting them. (Set to "0.0" to disable). (Defaults to "0.2").
// "shockwave_drain_easy" - Same as "shockwave_drain", except in Easy difficulty. If not set, value will be set to ("0.2") divided by the difficulty modifier.
// "shockwave_drain_hard" - Same as "shockwave_drain", except in Hard difficulty. If not set, value will be set to ("0.2") times by the difficulty modifier.
// "shockwave_drain_insane" - Same as "shockwave_drain", except in Insane difficulty. If not set, value will be set to ("0.2") times by the difficulty modifier.
// "shockwave_drain_nightmare" - Same as "shockwave_drain", except in Nightmare difficulty. If not set, value will be set to ("0.2") times by the difficulty modifier.

// "shockwave_force" - Float - Determins the scale of pushback the player recieves from a shock back. (Set to "0.0" to disable). (Defaults to "6.0").
// "shockwave_force_easy" - Same as "shockwave_force", except in Easy difficulty. If not set, value will be set to ("6.0") divided by the difficulty modifier.
// "shockwave_force_hard" - Same as "shockwave_force", except in Hard difficulty. If not set, value will be set to ("6.0") times by the difficulty modifier.
// "shockwave_force_insane" - Same as "shockwave_force", except in Insane difficulty. If not set, value will be set to ("6.0") times by the difficulty modifier.
// "shockwave_force_nightmare" - Same as "shockwave_force", except in Nightmare difficulty. If not set, value will be set to ("6.0") times by the difficulty modifier.

// "shockwave_stun" - Bool (0 / 1) - Determins if the Shock Wave Attack should stun the player. (Defaults to "0").

// "hockwave_stun_duration" - Float - Determins the max height distance allowed when performing a distance check for the Shock Wave. (Defaults to "2.0").
// "hockwave_stun_duration_easy" - Same as "hockwave_stun_duration", except in Easy difficulty. If not set, value will be set to ("2.0") divided by the difficulty modifier.
// "hockwave_stun_duration_hard" - Same as "hockwave_stun_duration", except in Hard difficulty. If not set, value will be set to ("2.0") times by the difficulty modifier.
// "hockwave_stun_duration_insane" - Same as "hockwave_stun_duration", except in Insane difficulty. If not set, value will be set to ("2.0") times by the difficulty modifier.
// "hockwave_stun_duration_nightmare" - Same as "hockwave_stun_duration", except in Nightmare difficulty. If not set, value will be set to ("2.0") times by the difficulty modifier.

// "shockwave_stun_slowdown" - Float - Determins the max height distance allowed when performing a distance check for the Shock Wave. (Defaults to "0.7").
// "shockwave_stun_slowdown_easy" - Same as "shockwave_stun_slowdown", except in Easy difficulty. If not set, value will be set to ("0.7") divided by the difficulty modifier.
// "shockwave_stun_slowdown_hard" - Same as "shockwave_stun_slowdown", except in Hard difficulty. If not set, value will be set to ("0.7") times by the difficulty modifier.
// "shockwave_stun_slowdown_insane" - Same as "shockwave_stun_slowdown", except in Insane difficulty. If not set, value will be set to ("0.7") times by the difficulty modifier.
// "shockwave_stun_slowdown_nightmare" - Same as "shockwave_stun_slowdown", except in Nightmare difficulty. If not set, value will be set to ("0.7") times by the difficulty modifier.
